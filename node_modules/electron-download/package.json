{
  "_args": [
    [
      {
        "raw": "electron-download@^4.1.0",
        "scope": null,
        "escapedName": "electron-download",
        "name": "electron-download",
        "rawSpec": "^4.1.0",
        "spec": ">=4.1.0 <5.0.0",
        "type": "range"
      },
      "C:\\Users\\Christian\\Documents\\2_CS\\YEAR 2\\Systems Engineering\\openEHR\\node_modules\\electron"
    ]
  ],
  "_from": "electron-download@>=4.1.0 <5.0.0",
  "_id": "electron-download@4.1.1",
  "_inCache": true,
  "_location": "/electron-download",
  "_nodeVersion": "8.11.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/electron-download_4.1.1_1534455078518_0.8873019723897575"
  },
  "_npmUser": {
    "name": "marshallofsound",
    "email": "samuel.r.attard@gmail.com"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "electron-download@^4.1.0",
    "scope": null,
    "escapedName": "electron-download",
    "name": "electron-download",
    "rawSpec": "^4.1.0",
    "spec": ">=4.1.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/electron"
  ],
  "_resolved": "http://registry.npmjs.org/electron-download/-/electron-download-4.1.1.tgz",
  "_shasum": "02e69556705cc456e520f9e035556ed5a015ebe8",
  "_shrinkwrap": null,
  "_spec": "electron-download@^4.1.0",
  "_where": "C:\\Users\\Christian\\Documents\\2_CS\\YEAR 2\\Systems Engineering\\openEHR\\node_modules\\electron",
  "author": {
    "name": "max ogden"
  },
  "bin": {
    "electron-download": "lib/cli.js"
  },
  "bugs": {
    "url": "https://github.com/electron-userland/electron-download/issues"
  },
  "dependencies": {
    "debug": "^3.0.0",
    "env-paths": "^1.0.0",
    "fs-extra": "^4.0.1",
    "minimist": "^1.2.0",
    "nugget": "^2.0.1",
    "path-exists": "^3.0.0",
    "rc": "^1.2.1",
    "semver": "^5.4.1",
    "sumchecker": "^2.0.2"
  },
  "description": "download electron prebuilt binary zips from github releases",
  "devDependencies": {
    "eslint": "^4.4.1",
    "eslint-config-standard": "^10.2.1",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-node": "^5.1.1",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-standard": "^3.0.1",
    "sinon": "^6.1.4",
    "tape": "^4.8.0",
    "temp": "^0.8.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-FjEWG9Jb/ppK/2zToP+U5dds114fM1ZOJqMAR4aXXL5CvyPE9fiqBK/9YcwC9poIFQTEJk/EM/zyRwziziRZrg==",
    "shasum": "02e69556705cc456e520f9e035556ed5a015ebe8",
    "tarball": "https://registry.npmjs.org/electron-download/-/electron-download-4.1.1.tgz",
    "fileCount": 8,
    "unpackedSize": 18536,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbde0nCRA9TVsSAnZWagAAUusP/iM/QZeUWQ6eBrm3T3Yo\nKEgc4xgEBg+Bewzy8vZuM5dpoWFgaCjPlRtqTTP22/5ruRGSV1Skvz4TgjJI\nBjosaZAcJVrRV2d6biljrSHII7EbIqmXFCXlzzjwtuyQ+ZauuvHbte7f/xJE\nz+dDveb2h0s/Ke3MORvMnr2sPuWDj7GTyKR5g1MH5NdS5MCYBrjrKGEt6Nn0\nos3t1Bo1CY1Kk/BE8kB0p1b7YztyLTKHjaT/+Fc6wuXHGdy3ZBazaM/zZeRX\nKG+QULuGwgM0A62l3LT+DVUTVwvSZyUWk94RyK2cUxyAk2mlGrRt+ecopyXk\nV2UGvuTedw/KeBkdKQiW+pNDE+oZOy/RF6tHPCYaEcNsGAp2UCdPOVwvABDI\nB8X6ukPSUOupaBvtba2AT3esCRFaDxPutENOZAIfLM+R+vsjWy/nXefBuUlH\n/d3SxIth6CLGtoDFrLUxxuGp5ttjhx16CjnUFyCN94Avoj3+rbBKjs+ZMWOp\niFYLgF0hLCGII/v7gYnSC3Y0c791CJ/2AY0FDI4JpueHjjoo/LzPbFNmX0nD\nvEt3L7PU6bFYdbz6V6iMH3Zf/LWKy4M9N2HUeMOePiYVy5Y4uUfOTak2BIsZ\nuqh7wi5esT0ifGSl/iuzxUxKRrqLlZR5bY5LzGTajX2jzae044nyBStHWU9A\nGQFa\r\n=I2t2\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 4.0"
  },
  "eslintConfig": {
    "extends": "standard",
    "parserOptions": {
      "sourceType": "script"
    },
    "rules": {
      "strict": [
        "error"
      ],
      "prefer-const": [
        "error"
      ]
    }
  },
  "gitHead": "29708b9b79a2341ac53e4121022390abfedcd66a",
  "homepage": "https://github.com/electron-userland/electron-download#readme",
  "keywords": [],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "electron",
      "email": "electron@github.com"
    },
    {
      "name": "fritx",
      "email": "uxfritz@163.com"
    },
    {
      "name": "jlord",
      "email": "to.jlord@gmail.com"
    },
    {
      "name": "kevinsawicki",
      "email": "kevinsawicki@gmail.com"
    },
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    },
    {
      "name": "marshallofsound",
      "email": "samuel.r.attard@gmail.com"
    },
    {
      "name": "zcbenz",
      "email": "zcbenz@gmail.com"
    },
    {
      "name": "zeke",
      "email": "zeke@sikelianos.com"
    }
  ],
  "name": "electron-download",
  "optionalDependencies": {},
  "readme": "# electron-download\n\n[![Travis Build Status](https://travis-ci.org/electron-userland/electron-download.svg?branch=master)](https://travis-ci.org/electron-userland/electron-download)\n[![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/fmfbjmrs42d7bctn/branch/master?svg=true)](https://ci.appveyor.com/project/electron-bot/electron-download/branch/master)\n\n[![NPM](https://nodei.co/npm/electron-download.png?downloads=true)](https://www.npmjs.com/package/electron-download)\n\nDownloads an Electron release zip from GitHub.\n\nUsed by [electron-prebuilt](https://npmjs.org/electron-prebuilt) and [electron-packager](https://npmjs.org/electron-packager)\n\n### Usage\n\n**Note: Requires Node >= 4.0 to run.**\n\n```shell\n$ npm install --global electron-download\n$ electron-download --version=0.31.1\n```\n\n```javascript\nconst download = require('electron-download')\n\ndownload({\n  version: '0.25.1',\n  arch: 'ia32',\n  platform: 'win32',\n  cache: './zips'\n}, function (err, zipPath) {\n  // zipPath will be the path of the zip that it downloaded.\n  // If the zip was already cached it will skip\n  // downloading and call the cb with the cached zip path.\n  // If it wasn't cached it will download the zip and save\n  // it in the cache path.\n})\n```\n\nIf you don't specify `arch` or `platform` args it will use the built-in `os` module to get the values from the current OS. Specifying `version` is mandatory. If there is a `SHASUMS256.txt` file available for the `version`, the file downloaded will be validated against its checksum to ensure that it was downloaded without errors.\n\nYou can also use `electron-download` to download the `chromedriver`, `ffmpeg`,\n`mksnapshot`, and symbols assets for a specific Electron release. This can be\nconfigured by setting the `chromedriver`, `ffmpeg`, `mksnapshot`, or\n`symbols` property to `true` in the specified options object. Only one of\nthese options may be specified per download call.\n\nYou can force a re-download of the asset and the `SHASUM` file by setting the\n`force` option to `true`.\n\nIf you would like to override the mirror location, three options are available. The mirror URL is composed as `url = ELECTRON_MIRROR + ELECTRON_CUSTOM_DIR + '/' + ELECTRON_CUSTOM_FILENAME`.\n\nYou can set the `ELECTRON_MIRROR` or [`NPM_CONFIG_ELECTRON_MIRROR`](https://docs.npmjs.com/misc/config#environment-variables) environment variable or `mirror` opt variable to use a custom base URL for grabbing Electron zips. The same pattern applies to `ELECTRON_CUSTOM_DIR` and `ELECTRON_CUSTOM_FILENAME`:\n\n```plain\n## Electron Mirror of China\nELECTRON_MIRROR=\"https://npm.taobao.org/mirrors/electron/\"\n\n## or for a local mirror\nELECTRON_MIRROR=\"https://10.1.2.105/\"\nELECTRON_CUSTOM_DIR=\"our/internal/filePath\"\nELECTRON_CUSTOM_FILENAME=\"electron.zip\"\n```\n\nYou can set ELECTRON_MIRROR in `.npmrc` as well, using the lowercase name:\n\n```plain\nelectron_mirror=https://10.1.2.105/\nelectron_custom_dir=\"our/internal/filePath\"\nelectron_custom_filename=\"electron.zip\"\n```\n\nYou can also set the same variables in your project's package.json:\n\n```json\n{\n    \"name\" : \"my-electron-project\",\n    \"config\" : {\n        \"electron_mirror\": \"https://10.1.2.105/\",\n        \"electron_custom_dir\": \"our/internal/filePath\",\n        \"electron_custom_filename\": \"electron.zip\"\n    }\n}\n```\n\nThe order of precedence is:\n\n1. npm config or .npmrc, uppercase (`process.env.NPM_CONFIG_ELECTRON_*`)\n1. npm config or .npmrc, lowercase(`process.env.npm_config_electron_*`)\n1. package.json (`process.env.npm_package_config_electron_*`)\n1. environment variables (`process.env.ELECTRON_*`)\n1. the options given to `download`\n1. defaults\n\nYou can also disable checksum validation if you really want to (this is in\ngeneral a bad idea).  Do this by setting `disableChecksumSafetyCheck` to `true`\nin the options object.  Use this only when testing local build of Electron,\nif you have internal builds of Electron you should generate the SHASUMS file\nyourself and let `electron-download` still perform its hash validations.\n\n### Cache location\nThe location of the cache depends on the operating system, the defaults are:\n- Linux: `$XDG_CACHE_HOME` or `~/.cache/electron/`\n- MacOS: `~/Library/Caches/electron/`\n- Windows: `$LOCALAPPDATA/electron/Cache` or `~/AppData/Local/electron/Cache/`\n\nYou can set the `ELECTRON_CACHE` environment variable to set cache location explicitly.\n\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/electron-userland/electron-download.git"
  },
  "scripts": {
    "lint": "eslint lib test",
    "test": "npm run unit-tests && npm run lint",
    "unit-tests": "tape test/*.js"
  },
  "version": "4.1.1"
}
